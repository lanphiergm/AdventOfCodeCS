// ############################################################################
// # Galen Lanphier                                                           #
// # https://github.com/lanphiergm/AdventOfCodeCS                             #
// # MIT License. See LICENSE file                                            #
// ############################################################################

using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;

namespace AdventOfCode.Puzzles.Year2020
{
    /// <summary>
    /// Day 3: Toboggan Trajectory
    /// https://adventofcode.com/2020/day/3
    /// </summary>
    [TestClass]
    public class Day03TobogganTrajectory
    {
        /// <summary>
        /// Part 1 of the puzzle using sample input
        /// </summary>
        [TestMethod]
        public void Part1_SampleInput()
        {
            Assert.AreEqual(7, ExecutePart1(sampleInput));
        }

        /// <summary>
        /// Part 1 of the puzzle using my actual puzzle input
        /// </summary>
        [TestMethod]
        public void Part1_PuzzleInput()
        {
            Assert.AreEqual(151, ExecutePart1(puzzleInput));
        }

        /// <summary>
        /// Part 2 of the puzzle using sample input
        /// </summary>
        [TestMethod]
        public void Part2_SampleInput()
        {
            Assert.AreEqual(336, ExecutePart2(sampleInput));
        }

        /// <summary>
        /// Part 2 of the puzzle using my actual puzzle input
        /// </summary>
        [TestMethod]
        public void Part2_PuzzleInput()
        {
            Assert.AreEqual(7540141059, ExecutePart2(puzzleInput));
        }

        /// <summary>
        /// Executes part 1 of the puzzle
        /// </summary>
        /// <param name="rows">The tree row specifications</param>
        /// <returns>The number of trees encountered</returns>
        private static long ExecutePart1(string[] rows)
        {
            return GetTreeCount(rows, 1, 3);
        }

        /// <summary>
        /// Executes part 2 of the puzzle
        /// </summary>
        /// <param name="rows">The tree row specification</param>
        /// <returns>The product of the trees encountered on the different trajectories</returns>
        private static long ExecutePart2(string[] rows)
        {
            var slopes = new List<(int down, int right)>()
            {
                (1, 1),
                (1, 3),
                (1, 5),
                (1, 7),
                (2, 1)
            };

            long product = 1;

            foreach (var (down, right) in slopes)
            {
                product *= GetTreeCount(rows, down, right);
            }

            return product;
        }

        /// <summary>
        /// Computes the number of trees encountered along the given trajectory
        /// </summary>
        /// <param name="rows">The tree row specification</param>
        /// <param name="downSlope">The downward component of the trajectory</param>
        /// <param name="rightSlope">The rightward component of the trajectory</param>
        /// <returns>The number of trees encountered</returns>
        private static int GetTreeCount(string[] rows, int downSlope, int rightSlope)
        {
            int treeCount = 0;

            int iCol = 0;
            for (int iRow = 0; iRow < rows.Length; iRow += downSlope)
            {
                if (GetCharacter(rows, iRow, iCol) == '#')
                {
                    treeCount++;
                }
                iCol += rightSlope;
            }

            return treeCount;
        }

        /// <summary>
        /// Gets the character at the given position in the row array
        /// </summary>
        /// <param name="rows">The row specification</param>
        /// <param name="iRow">The row number. Must be a valid index of rows</param>
        /// <param name="iCol">The column number. If larger than the row length, will wrap around
        /// to the beginning of the row in an infinite pattern.</param>
        /// <returns>The character at the given position</returns>
        private static char GetCharacter(string[] rows, int iRow, int iCol)
        {
            string row = rows[iRow];
            return row[iCol % row.Length];
        }

        #region Data

        private static readonly string[] sampleInput =
        {
            "..##.......",
            "#...#...#..",
            ".#....#..#.",
            "..#.#...#.#",
            ".#...##..#.",
            "..#.##.....",
            ".#.#.#....#",
            ".#........#",
            "#.##...#...",
            "#...##....#",
            ".#..#...#.#"
        };

        private static readonly string[] puzzleInput =
        {
            ".#......#..####.....#..#.......",
            "#.#...#...#..#.#...#.#...##.##.",
            "#.#....#..........#...##.....##",
            "#.#.#.....##......#.#.......###",
            "..#..###....#.#....#.#.#..#....",
            ".......#.#....##..##...#...#...",
            "..#..#..#..###.......#.....#.#.",
            ".#.......#...##...##.##......##",
            "#.#.##..##.#..#....#..###..#.#.",
            "#.....#.#.........#.....##.#.#.",
            "..#.#....##..#...#...##........",
            "......#....#..##.#.#......###..",
            ".......#.......#......##...#...",
            ".##.....#.......#...###.....##.",
            ".#...#.##..##.#..##....#.......",
            "..#......##...#..#...#.#.##.###",
            ".##.##.....##....#..#......#.#.",
            ".#.....#..###..#.##.#.....##.#.",
            "......##..........#..........#.",
            ".##....#.....#..##.#..#.#..###.",
            "..##.......#....#...##...#..#..",
            ".##...#.....#.###.#.#..#...#.#.",
            ".....##.#.##..##...#...........",
            "..#..###.##.#.#.###...###..#.#.",
            ".#........#..#.#........#.#...#",
            "....##.......#....#.#.##.#.....",
            "....##........######..###..#.#.",
            "#.#.#............#.......#..#..",
            "...##...#.##.....#.#..#......#.",
            "......#.##.#....##..#.#..###...",
            "##.....#.#....#....#.##.#.###..",
            "#..#..#..##.#..##.##.##.#.##...",
            ".###.####..#..#........#.....##",
            ".......##..#.......#...........",
            ".##...#............#.#.##...#..",
            "....##.....#...##..#..#.#..###.",
            "...#.....#####.#..#...##....##.",
            "#.....#.#.#....##.......##.#.#.",
            "......#.#..#.##.#######......#.",
            "#.##...##....#..###.#.......#..",
            ".....##...#....#...#....##.##.#",
            "....###......#...###..#......##",
            "..#...##..##.######..#.#......#",
            "......##....#....##..#......##.",
            ".#...#..##..#.###.#......#....#",
            "##....##..#..####.#.....#...#..",
            ".#.......#...#.......##......#.",
            "......#...#...#........#.......",
            ".#........#.###...#..####.#..#.",
            "##...#.#............#.....###..",
            ".....###.#.##...........###..#.",
            ".#.#...#.....#.#.##..##...####.",
            "..##.......#..#.##.#....#.....#",
            ".#..#.#..####.....###.#.....#..",
            "..#..###.....####..#.##.#.#.##.",
            ".###..#.....#......#...####....",
            "...#.#..#.#..#...#...#....##.##",
            "..###....#.##.....#..........#.",
            "###...#####......##............",
            "..###.....#........##.#...#..#.",
            "..##.##.#.....##........##..#.#",
            "##..#.#...#.#..#..###.#....#..#",
            "....#..#.#.....#..#####...#....",
            "....#.........#......##.##.....",
            ".#...####.##......##..##.#..#.#",
            "...#...#.##..#...##..###...#...",
            "###...#.....#.##.###.###..#.#..",
            "..#......#.###.....#..##.#...#.",
            "#.....##.########...#####....#.",
            "........##..#..##..##.#........",
            "....#.######....##..#..#.##..#.",
            "#.......#..##..#..#.#.#..##.##.",
            "...#.#..#..#.......#......###.#",
            ".#.#..#.#..#.##.#.............#",
            "#....#.##.#.#.....#..#.#..#....",
            "...###..#...#....#.........#.#.",
            ".#..#.....##..#.#..#.#.......#.",
            "..#...##...#......#......####..",
            "....#..#.......#.......#.#..#..",
            "#...#..#...........#.#..#.....#",
            "#...#.#.......#...#....###....#",
            ".#..#.#.##....#......#........#",
            "..#...#..##..#..#..#..#...#.#..",
            "..#.#.........#....#....##.....",
            "##.....##.#.#.#.........##.....",
            ".##...#.##...........#...#...##",
            ".##..##.#.#..........##..##....",
            "#....#....#.#...#.#..#....#.#..",
            "####....##.....#..##.###.......",
            "#..#....#......##.#.#....#.....",
            ".....#....#.###.##.........###.",
            "#.......#.####..#..#..##.......",
            "##.#.......#..##..#....#..#.#..",
            "..###...#.#...#.....##.##.####.",
            "....#...#.#....#..#..#.....#.##",
            "#.....##.#.#..#.##..#..##......",
            "................###..#....##...",
            "..#.##.....#..........##.#...#.",
            "..#.#..#.#....#.#.#..#..#..#.#.",
            "#...#..##.#.#...#..#...#..#....",
            "#..#.#.........#..###........#.",
            ".#...#.............#..###..#..#",
            "#.........#.#..#...#.#.....#..#",
            "....#..#..#.#.#...#...#.....##.",
            "##...###.#.####..#......#...#..",
            "..#..##...#.#......#.#.......#.",
            "#......###....##.#.##..........",
            "#####....###..#...............#",
            "##.#...####....#....#...#....#.",
            ".#.......#..#.....#...#.....###",
            "...#..#.#.#....##......##...#..",
            "...#.....#...#.##.#..#.#....#..",
            "#...###....#...#.#....#........",
            ".#.......#........#...##.##.##.",
            ".....#....#...##.....##...###.#",
            "....#....#.#..#...##.##.##.....",
            ".......#............#...#.#..#.",
            ".#............#.....##.......#.",
            "........#....#....##......##.##",
            ".......##..#.#..#.##..###..##.#",
            "#..##..##.........####.#.###...",
            "#....#..#...##...#.............",
            "#...#...###..........##..#..#..",
            "....#...#..#.....##...#........",
            "#.....#......#.#.....#...#..#..",
            "..#.....#.....#....#..#........",
            "..#..#.....#.#.........#..###..",
            "................###..#.#....#..",
            "#.....#.....#.#.#.#.#..#...#.#.",
            "#....#....#.#..........#.#....#",
            "....#..#......#..##.#...##.....",
            "..#.#...#.####....#.#..#.#..#..",
            ".........##......#.....##......",
            "##.#.###.#.....#.....####.#..#.",
            ".....#.....#..#....#..###.#....",
            "##..#.#...#.##....#....#.......",
            ".....#......#.#...##..#.#......",
            "....##..#...#...##..##.#....#.#",
            "............#..........##.#....",
            "##..#..#.##..##..#.#....#.#.#..",
            ".......#.#...#...#.#...#..#....",
            "#....#.#...#...#........#..#...",
            "...........#.......#...##..###.",
            ".#..##......#.##.........##..#.",
            "...#...#...###.#.##....##.#..#.",
            "#...#..#.#.#.....##..#.......#.",
            ".##..#.###.##......#.#....#.#.#",
            "..#....#.......#..#..#.#.#.##..",
            "#...#...###...###.........#....",
            ".#.#...#.....##.#.#..#....#.##.",
            ".........#.#.##.....#.#.###....",
            "...#.#...#......#...####......#",
            "...##..##....##......##...###..",
            "###...#..#.......##.....#....#.",
            "...#..#..#..###...##.##..#..#..",
            "...#......#......##..#.#.##..#.",
            "...#.........#....#.#....#.#...",
            "##................#..#.#.....#.",
            "....#.##...#..#.##...##.#.....#",
            "......#..##.##..###.#..#.##.##.",
            ".#.#...###.....###.....##...###",
            ".##.....#.#.#..#..###..#..#..#.",
            "#.......#..#..#....##.....#....",
            "...#.#.##..#..#......##.##...#.",
            "....##.#......#...#..#..#......",
            ".####.#..#.....#..##.#...##..##",
            "..#..#...#..........###..#....#",
            ".#.#.##.##...#............#....",
            "........##..##......#.##..#.###",
            "...#.#....###......##.......#..",
            "..##...#...#.#..#.....#.....#..",
            "##..#...###..#..#.#.#...#...#..",
            ".....#..#....##.....##.....###.",
            "....##...###.#..#.#....##..#..#",
            "#......#...#....#......#...##..",
            "....#.##...#.#......#.#.##...#.",
            ".......#.....#...#####...#.#...",
            "...#.....##.#............#.....",
            "...#.#........#.#.#..#.........",
            "....###......#.#.#..#.####.#..#",
            "#.....#.#.#.....#.#.#.....#..#.",
            "..##.##......#...#.#...........",
            "###..###....#.#####......###...",
            "..##..............##.#.#....#.#",
            "#..#...#..........#..#.#.#..###",
            "##.###............#....#.#...#.",
            "#.#..#.#..##.#.#....#...#......",
            "#....#...#..##.....#..#.#..###.",
            "..#.....#.#....#.#..#.##.#..##.",
            "...##...#.#.##...#....###....#.",
            "......###.####.......#..#.#.#.#",
            ".#..............##........#....",
            "...##.##...##....#..#.......#..",
            ".....#.....#....###...#..#..#.#",
            ".#.....#..#.....#......#.....##",
            "#.#.##.#..#..#.....#.##..###...",
            "..#......#...##.###..#.#...#..#",
            "......#.....#...##......#......",
            "##.#........#..........#.....#.",
            "#........##.#............##....",
            "...#......##...#.#.....##......",
            "...##.......#....#.#..#.#.###..",
            "..#....##..##.##.....###....#..",
            "..#...#.#...#.....#..........#.",
            "......#...#...#.#.##.#...#.#.#.",
            ".#...#......#.##........#......",
            ".##.##..#....#...#.#...##......",
            "#..#......#.#...........#....#.",
            "....##.#....#...#..#....#.#..##",
            "#....##.##....#.#..##.#........",
            ".##.##.#....##.....#..#....#..#",
            "...#...#.....###.#.##..........",
            "....#...#....##.......###......",
            "#.........#......#.#.......#...",
            "#..........#..##..#.#..........",
            ".....#.......#..##.##....##...#",
            "........................#.#....",
            "#..#.........#.............#..#",
            "#..#.....#.......#....#....#.#.",
            "..##..##.......##....#...#.....",
            ".##......#..##......#.###......",
            "...#.#........#.......##..###..",
            "..##...###.###......#...#....##",
            "#...#...#.....###.#.#.#..#.....",
            "#....#.........#..##...#...##..",
            "#..###..#.#.#.##.#..#.#....#.##",
            "#...#.#.....#.###.#.......#....",
            "..##..#..#....#.#...........#.#",
            "#.........#.#......#...##......",
            ".######......#..#....#.#.#....#",
            "##..#.#..####.###.........#....",
            "###########.....##.##...#..#...",
            "#...##.#.#....#.#....#......#..",
            "...#..##..#..##..#......#....#.",
            ".#....#...#....#.#..##....##...",
            "#..#.#............#....#.#...#.",
            "...#...#..#.#.##......#..#.#...",
            "#.#...##.....#..#.##......####.",
            ".#.#..##..#.....#.#..#.##......",
            "#.#.##......##.....#..#.#..#...",
            "#..##...#.##.#.......#.##......",
            "..#.......#.#.#...##..##...#...",
            ".#...#..#..#.#.........#..##...",
            "#..#.......#....#.#...#.###...#",
            ".......#..#.......##.#.#...#.#.",
            ".#.................###.#..###..",
            "..........#.#.....##..#####...#",
            "#......#.#..##.#.#...#.##.#....",
            "#......#.#..##.##.#...#....#...",
            "....#..#......#....#....#######",
            ".#...#......#....###......#.###",
            "#.#....#.#...#.###......#..#..#",
            ".###......#.#...#.####.#..####.",
            "######.#.....###.#...#.#.....#.",
            ".#.###....#..#.#.....#.....####",
            ".......###.#.........#..#......",
            "#...#.....##.#......####.......",
            "..#.#..##.#.#...#...#..##..##..",
            ".....#...##.....#...##......##.",
            "##..#..#.##..#.#......#.....#..",
            "##.........#.#.##.#..#.#....#.#",
            ".#........###...#.........#....",
            "...#..#.#..#....####...........",
            "#.#....#..##..####.#...#.##....",
            ".#.....#.......#..........#..##",
            "...#.......#...###..#.....#..##",
            ".........#.###.#..##...#.##...#",
            ".#..........##..####...#..#.#.#",
            ".#...##...#............##...#.#",
            "...#....#.#..........#.#..#.#..",
            ".#.#...##....##.#.#.#....#.....",
            "....#..#.....#.#..#.#..#.##.###",
            ".....#.#.....#..#......#.#.#...",
            ".....#.#.#..###..#.#..###...#..",
            "#.......####...#.#..#......##.#",
            "....#..#..###......###.##....#.",
            "##.....#.....#.............#..#",
            "#..#..#...##.....##..#..#.#....",
            ".....#.#.###...#...............",
            "#.#.#.....#.#..#.#...#.......#.",
            "..##.##............#....#..##..",
            "#....##...#.....#.###...#.#....",
            "#...##.#.........#...#....#....",
            "##.##.#...#.#...###..#....##..#",
            "....#....##..#..#.......#...##.",
            ".#...#...#..#.....#..###.#..#.#",
            "....#..###......#....##....#...",
            "#.#.....#....##.#..#.#...###...",
            ".......#............#......#...",
            ".##..#.###.#.............###...",
            "..##...##.#.#.#.....#........##",
            "....#.###....#..#..#...#...#..#",
            ".....#...#...#..#....#.....##..",
            "###.#.#.....#......####.....#..",
            "#.#.###............#......#....",
            "..#.....#..#..#..#....#......#.",
            "#...######...#....#.##...##.#.#",
            "##.#.#.#..##......##.#..#.#...#",
            "............#.#..#.##....#.....",
            "......#............#.#...#..#.#",
            ".#..##...##..#.#.#..###.....##.",
            "#.###.#...........#...#....#...",
            "....##.....#...##...#...###.#.#",
            ".####.#.#.....#.#..#.#.##......",
            ".#...##......###...#..##..#.#..",
            ".#......#...#....##.....##..#..",
            "..........##.....###.##.#...#.#",
            ".#........##.#..............#..",
            "#...###..#...#.....#....#.....#",
            "...#......#..#...#...#..###.#..",
            ".#...##..#........#.......#.#..",
            ".#.#.##.........##.##......#..#",
            "#...#.#.#...#.....#.#...#.#..#.",
            "#.#..#...#...#...##..........#.",
            ".#...........#....#..#.#..#.#..",
            "#.......#......#..#...#........",
            ".....#..#...##..###..##........",
            "......#...#.....#..#.#.#....##.",
            "....##..##..##....###.##.......",
            ".#........##.#.#...#..#........",
            ".....##...##...#......#..#...#.",
            "..#.....#....###.#..##....#..#.",
            "......#..#...####.#.....##.####"
        };

        #endregion Data
    }
}
