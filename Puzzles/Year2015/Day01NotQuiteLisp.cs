// ############################################################################
// # Galen Lanphier                                                           #
// # https://github.com/lanphiergm/AdventOfCodeCS                             #
// # MIT License. See LICENSE file                                            #
// ############################################################################

using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;

namespace AdventOfCode.Puzzles.Year2015
{
    /// <summary>
    /// Day 1: Not Quite Lisp
    /// https://adventofcode.com/2015/day/1
    /// </summary>
    [TestClass]
    public class Day01NotQuiteLisp
    {
        /// <summary>
        /// Part 1 of the puzzle using sample input
        /// </summary>
        [TestMethod]
        public void Part1_SampleInput()
        {
            Assert.AreEqual(-3, ExecutePart1(sampleInput1));
        }

        /// <summary>
        /// Part 1 of the puzzle using my actual puzzle input
        /// </summary>
        [TestMethod]
        public void Part1_PuzzleInput()
        {
            Assert.AreEqual(280, ExecutePart1(puzzleInput));
        }

        /// <summary>
        /// Part 2 of the puzzle using sample input
        /// </summary>
        [TestMethod]
        public void Part2_SampleInput()
        {
            Assert.AreEqual(5, ExecutePart2(sampleInput2));
        }

        /// <summary>
        /// Part 2 of the puzzle using my actual puzzle input
        /// </summary>
        [TestMethod]
        public void Part2_PuzzleInput()
        {
            Assert.AreEqual(1797, ExecutePart2(puzzleInput));
        }

        /// <summary>
        /// Executes part 1 of the puzzle
        /// </summary>
        /// <param name="directions">The floor directions</param>
        /// <returns>The resulting floor</returns>
        private static int ExecutePart1(string directions)
        {

            int up = directions.Count(c => c == '(');
            int down = directions.Count(c => c == ')');
            return up - down;
        }

        /// <summary>
        /// Executes part 2 of the puzzle
        /// </summary>
        /// <param name="directions">The floor directions</param>
        /// <returns>The character at which Santa first enters the basement</returns>
        private static int ExecutePart2(string directions)
        {
            int answer = 0;
            int currFloor = 0;
            for (int i = 0; i < directions.Length; i++)
            {
                currFloor += directions[i] == '(' ? 1 : -1;
                if (currFloor == -1)
                {
                    answer = i + 1;
                    break;
                }
            }
            return answer;
        }

        #region Data

        private const string sampleInput1 = ")())())";

        private const string sampleInput2 = "()())";

        private const string puzzleInput = "()()(()()()(()()((()((()))((()((((()()((((()))()(((((" +
            "))(((((((()(((((((((()(((())(()()(()((()()(()(())(()((((()((()()()((((())((((((()((" +
            ")(((()())(()((((()))())(())(()(()()))))))))((((((((((((()())()())())(())))(((()()()" +
            "((((()(((()(()(()()(()(()()(()(((((((())(())(())())))((()())()((((()()((()))(((()()" +
            "()())))(())))((((())(((()())(())(()))(()((((()())))())((()(())(((()((((()((()(())()" +
            ")))((()))()()(()(()))))((((((((()())((((()()((((()(()())(((((()(()())()))())(((()))" +
            "()(()(()(()((((()(())(()))(((((()()(()()()(()(((())())(((()()(()()))(((()()(((())()" +
            ")(()(())())()()(())()()()((()(((()(())((()()((())()))((()()))((()()())((((()(()()((" +
            ")(((()))()(()))))((()(((()()()))(()(((())()(()((()())(()(()()(()())(())()(((()(()()" +
            ")()((((()((()))))())()))((()()()()(())()())()()()((((()))))(()(((()()(((((((())()))" +
            "()((((()((())()(()())(())()))(()(()())(((((((())))(((()))())))))()))())((())(()()((" +
            "())()())()))))()((()()())(())((())((((()())())()()()(((()))())))()()))())(()()()(()" +
            "((((((()()))())()))()(((()(((())((((()()()(()))())()()))))())()))())((())()())(((((" +
            "())())((())())))(((())(((())(((((()(((((())(()(()())())(()(())(()))(()((((()))())()" +
            "))))())))((()(()))))())))(((((())()))())()))))()))))(((()))()))))((()))((()((()(()(" +
            "())()())))(()()()(())()))()((((())))))))(())(()((()()))(()))(()))(()((()))))))()()(" +
            "(((()()))()())()))))))()()()))(()((())(()))((()()()())()(((()((((())())))()((((()((" +
            ")))))))())))()()())()))(()))))(()())()))))))((())))))))())()))()((())())))(()((()))" +
            "()))(())))))(()))()())()()))((()(()))()()()()))))())()()))())(())()()))()))((()))))" +
            "()()(()())))))()()()))((((()))()))))(()(())))(()())))((())())(()))()))))()())))()()" +
            ")()())))))))))()()))))())))((())((()))))())))(((()())))))))(()))()()))(()))()))))()" +
            "())))))())((((()())))))))())))()()))))))))()))()))))()))))))(())))))))))())))))))))" +
            "))))))())())((())))))))))()))((())))()))))))))())()(()))))))())))))()()()())()(()()" +
            "()(()())(()))()()()(()())))())())))()))))())))))))()()()()())(())())()())()))))(()(" +
            ")()()()))))()))())())))((()())()())))()))()))))(()())))()))))))))(((()))()())))))))" +
            ")))))))))))))(()))(()((()))())))())(()))(()(()(())))))()(()))()))()()))))))))))))()" +
            "((()())(())())()(())))))())()())((()()))))(()()))))())()(())()))))))))))))))))))))(" +
            ")))(()(()())))))))()()((()))()))))))((())))()))))))))((()))())()()))())()()))((()))" +
            "())))))))))))(()())()))(())((()(()()))(()())(())))()())(()(())()()))))()))()(()))))" +
            "))(()))))))))))(()))())))))))))())))))())))(())))))()))))(())())))))))))()(()))))()" +
            "())))())(()))()())))))))))))))())()()))))()))))))())))))()))))(())(()()()()((())())" +
            ")())(()))((())()))())())(())(()()))))()))(())()()((())(())))(())))()))())))))))))()" +
            "(((((())())))(())()))))(())))((()))()(((((((()))))()()))(())))))()(()))))(()()))())" +
            ")())))))))(()())()))))))))())))(()))())()))(())()((())())()())())(()(()))))()))))))" +
            "((()())(())()()(()())))()()))(())(())(()))())))()))(()))()()))((((()))))()))((()()(" +
            ")))))()))()))())))(()))()))))(())))()))())()(()))()())))())))))))())))())))()()))))" +
            "))(()))())())))()))()()())())))))))))))))())))()))(()()))))())))())()(())))()))))))" +
            ")))))))))))()()())())))))()()()((()(()))()()(())()())()))()))))()()()))))))((()))))" +
            "))))()(()(()((((((()()((()())))))))))))()))())))))((())())(()))())))())))))())()()(" +
            "))(())))())))()())())(())))))))()()(())))()))())))())())())()))))))))()))(()()()())" +
            "())())))(())())))))))()()())()))))())))())()(())())))))))()())()))(()()(())())))()(" +
            "()((()()((()()(((((())(()())()))(())()))(())))(())))))))()))()))((()))()))())))))))" +
            ")()))))))))((()()())(()))(((()))(())))()))((())(((())))()())))())))))((())))))(())(" +
            "))((((((())())()(()))()(()((()())))((())()(()(()))))(())(()()())(())))())((()(((())" +
            "())))(((()())())))())()(())())((((()()))))())((()))()()()()(())(((((((()()()((()))(" +
            "))(()())))(())())((((()()(()))))()((())))((())()))()(((()))())))()))((()(()))(())((" +
            ")((((())((((()()(()()))(((())(()))))((((()(()))(())))))((()))(()))((()(((()(()))(()" +
            "(()((()(())(()(()(()(()()((()))())(((())(()(()))))(()))()()))(())))(())()(((())(())" +
            ")()((((()()))))())(()))))((())()((((()(((()))())())(((()))()())((())(())())(())()((" +
            "))()(()()((((((()()))))()()(((()()))))()())()(((()(()))(()(()())(()(()))))(((((()((" +
            "(())())))))(((((()((()()((())())((((((()(())(()()((()()()()()()()(()()))()(((()))()" +
            "))(((((((())(((()((()())()((((())(((()(())))()((()(()()()((())((()())()))()))())))(" +
            "))((((((()))(()(()()()))(()((()(()(()))()((()(((()()()((())(((((())()(()))())())(((" +
            ")(())))(()(()())(())((())())())(((()()()(())))))())(()))))))()))))))())((()()()))((" +
            "()((((((()))(((()((((()()()(((()))())()(()()(((()((()()()()())()()))()()()(()(())((" +
            "()))))(()))())))))))()(()()(((((())()(()(((((()((()(()()())(()((((((((()((((((())()" +
            "((((()()()((()((()((((((()))((())))))))())()))((()(()))()(()()(()((())((()()(((((((" +
            "(((((()())(()()()))((((()((((((())(()))())(()()((()()))()(((((((()((()()((((((()(((" +
            "())))((())))((((((((()()(((((((())(((((()())(((())((())()((((()(((((((()(()(((()(((" +
            "(((()(((()(((((((((((()()((()()(()))((()()(((()(((())))((((())()(()(((())()(()(((()" +
            ")(((((((((((()))())))((((((())((()()((((()())())((((()()))((())(((((()(()()(()()()(" +
            "(())(()((()()((((()(((((()((()(()((((()())((((((()(((((()()(()(()((((())))(())(())(" +
            "())((((()(()()((((()((((()()((()((((((())))(((((()))))()))(()((((((((()(((())())(((" +
            "())))(()(()((())(((()((()()(((((()((()()(((())()(()))(((((((())(()(((((()))((()((()" +
            "((()))(())())((((()((((())()(()))(((()(((((((((((((((())(((((((((()))(((()(()()()()" +
            "((((((()((())()((((((((()(())(((((((((((()(()((())()((()()(()(()()((((()()((())(()(" +
            "(()()(()()((((()(((((((())))((((())(())()(((()()((()()((((()((()(((()((())(((()()()" +
            "((((()((((()()(()(()((((((((())(()(((((())(()())(((((((()())()(()((((()((())(()()()" +
            ")((((()()(((()((((())(())(()()(((((((((()()))()(((())(()(()((((((())(()()())(()))()" +
            "()(((()(((()((())(()(((((((()(()(()((()(((((()(()((()(()((((((()((((()()((((()(((()" +
            "((())(()(()((()()((((()()(())()(())(((())(()((((((((()())(((((((((()(())()((((())))" +
            "()))()()(((((()()((((((())(()()(((()(()(((((((()(()(((((((())(())((((()((()(())))((" +
            "((()()())(()))((()())((((()(((((()(()(())(()(()()())(((((()(((((()((((()()(((((((((" +
            ")()))(()((((((())((((())()(()(((()()()(((()(()(())(())(((((()(())())((((())(())(()(" +
            "((()(((((())((((())())((()(((((((()(((())(()(()))(((((((((()((()((()()(()((((())(((" +
            "()((())((((())(()(((()(((()(()((((()(((())(()(((()(()()(()(()((()()(()())(())())(((" +
            ")(()(((()(((()(((()()(((((((((()(((((((((()()(((()(((()())((((()(()(((()()()((())((" +
            "((((((((())(()(((()((((()())((((()((()))(((()()()(((((()(((((((())((()())(()((((())" +
            "((((((((())(()((()((((((((((()()((()((()()))(((()())()())()(((()())()()(()(()((((((" +
            "(())()))(())()))())()()((())()((()((((()((()((())(((((()((((((()(())))(()))())(((()" +
            "))((()()(()(((()))((((())()(((()))))()(()(())()(((((())(()(()(())(())()((()()()((((" +
            "()(())((()())(()(()))(()(()(()()(())()()(()((())()((()))))()))((()(()()()()((()())(" +
            "()))())()(()(((((((((())())((()((()((((((())()((((())(((())((()(()()()((())(()((())" +
            "(((()((((()()((()(()(((((())()))()((((((()))((())(((()()))(((())(())()))(((((((())(" +
            "())())()(())(((((()))()((()))()(()()((()()()()()())(((((((";

        #endregion Data
    }
}
